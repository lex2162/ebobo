# def sample(name):
#     print(f"–ü—Ä–∏–≤–µ—Ç, {name}!")
#
# sample("–†–æ–±–µ—Ä—Ç")  # ‚Üí –ü—Ä–∏–≤–µ—Ç, –ê–Ω—è!
# sample("–ú–∞–∫—Å") # ‚Üí –ü—Ä–∏–≤–µ—Ç, –ú–∞–∫—Å!
#
# def greet_user(name, age):
#     print(f"–ü—Ä–∏–≤–µ—Ç, {name}! –¢–µ–±–µ {age} –ª–µ—Ç.")
#     if age < 25:
#         print("–¢—ã –ø–∏–∑–¥—é–∫")
#     if age>= 25:
#         print("–¢—ã –ø–æ–¥—Ö–æ–¥–∏—à—å")
# greet_user(name="–°—Ç–∏–≤", age=25)
# greet_user(name="–ß–∏–ø–∏–Ω–∫–æ—Å", age=13)
#
#
# for i in range(10):
#     print(i)
#     i = 5
# print(i)
#     # for i in range(4):
#     #     print(i)
#     # else:
#     #     print("–Ø –º–æ–ª–æ–¥–µ—Ü")


# n = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
#
# if n < 2:
#     print(f"{n} ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ.")
# else:
#     for i in range(2, n):
#         if n % i == 0:
#             print(f"{n} ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ.")
#             break
#     else:
#         print(f"{n} ‚Äî –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ.")

# print("–ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100:")
#
# for n in range(2, 101):  # –Ω–∞—á–∏–Ω–∞–µ–º —Å 2, –ø–æ—Ç–æ–º—É —á—Ç–æ 1 ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ
#     for i in range(2, n):
#         if n % i == 0:
#             break
#     else:
#         print(n)

# def find_primes(start, end):
#     print(f"–ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –æ—Ç {start} –¥–æ {end}:")
#
#     for n in range(start, end + 1):
#         if n < 2:
#             continue  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º 0 –∏ 1
#         for i in range(2, int(n**0.5) + 1):  # –¥–µ–ª–∏—Ç–µ–ª–∏ –¥–æ –∫–æ—Ä–Ω—è –∏–∑ n
#             if n % i == 0:
#                 break
#         else:
#             print(n)
# find_primes(1, 100)

import gender_guesser.detector as gender

# –£—á–∞—â–∏–µ—Å—è –ø–æ —è–∑—ã–∫–∞–º
english_students = {
    "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
    "Alexey",
    "–ú–∞—Ä–∏—è –°–º–∏—Ä–Ω–æ–≤–∞",
    "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤",
    "–°–≤–µ—Ç–ª–∞–Ω–∞ –û—Ä–ª–æ–≤–∞"
}

french_students = {
    "–°–≤–µ—Ç–ª–∞–Ω–∞ –û—Ä–ª–æ–≤–∞",
    "–ê–Ω–Ω–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞",
    "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤",
    "–î–º–∏—Ç—Ä–∏–π –ù–∏–∫–∏—Ñ–æ—Ä–æ–≤"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä –ø–æ–ª–∞
d = gender.Detector()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–∞ –ø–æ –∏–º–µ–Ω–∏
def detect_gender(name):
    first_name = name.split()[0]  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –∏–º—è
    gender_prediction = d.get_gender(first_name)

    if gender_prediction in ["male", "mostly_male"]:
        return "–º"  # –ú—É–∂—Å–∫–æ–π
    elif gender_prediction in ["female", "mostly_female"]:
        return "–∂"  # –ñ–µ–Ω—Å–∫–∏–π
    else:
        return "–Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π"  # –í —Å–ª—É—á–∞–µ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ –ø–æ–ª—É
def split_by_gender(students):
    boys = sorted([s for s in students if detect_gender(s) == "–º"])
    girls = sorted([s for s in students if detect_gender(s) == "–∂"])
    return boys, girls


# –†–∞—Å—á—ë—Ç –≥—Ä—É–ø–ø
both_languages = english_students & french_students
only_one_language = english_students ^ french_students
all_students = english_students | french_students


# üîΩ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Å –ø–æ–ª–æ–º
def print_group(title, group):
    print(f"\n{title}:")
    boys, girls = split_by_gender(group)

    print("  üë® –ú–∞–ª—å—á–∏–∫–∏:")
    for boy in boys:
        print(f"    ‚Äî {boy}")

    print("  üë© –î–µ–≤–æ—á–∫–∏:")
    for girl in girls:
        print(f"    ‚Äî {girl}")


# üîΩ –í—ã–≤–æ–¥
print_group("–£—á–µ–Ω–∏–∫–∏, –∏–∑—É—á–∞—é—â–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —è–∑—ã–∫", only_one_language)
print_group("–£—á–µ–Ω–∏–∫–∏, –∏–∑—É—á–∞—é—â–∏–µ –æ–±–∞ —è–∑—ã–∫–∞", both_languages)
print_group("–í—Å–µ —É—á–µ–Ω–∏–∫–∏ –≤ –∫–ª–∞—Å—Å–µ", all_students)

